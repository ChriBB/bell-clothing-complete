{"ast":null,"code":"// import { createSelector } from 'reselect';\n// // import memoize from 'lodash.memoize';\n// const selectShop = state => state.shop;\n// export const selectCollections = createSelector(\n//     [selectShop],\n//     shop => shop.collections\n// );\n// export const selectCollectionsForPreview = createSelector(\n//     [selectCollections],\n//     collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n// );\n// export const selectCollection = collectionUrlParam => createSelector(\n//     [selectCollections],\n//     collections => (collections ? collections[collectionUrlParam] : null)\n// );\n// export const selectIsCollectionFetching = createSelector(\n//     [selectShop],\n//     shop => shop.isFetching\n// );\n// export const selectIsCollectionsLoaded = createSelector(\n//     [selectShop],\n//     shop => !!shop.collections\n// );\nimport { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:/React_Course/bell-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDC,WAAW,IACTA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHjB,CAAlD;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFpD,CADT;AAMP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtD,CAACC,UAAD,CADsD,EAEtDE,IAAI,IAAIA,IAAI,CAACW,UAFyC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFsC,CAAhD","sourcesContent":["// import { createSelector } from 'reselect';\r\n\r\n// // import memoize from 'lodash.memoize';\r\n\r\n\r\n// const selectShop = state => state.shop;\r\n\r\n// export const selectCollections = createSelector(\r\n//     [selectShop],\r\n//     shop => shop.collections\r\n// );\r\n\r\n// export const selectCollectionsForPreview = createSelector(\r\n//     [selectCollections],\r\n//     collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n// );\r\n\r\n\r\n// export const selectCollection = collectionUrlParam => createSelector(\r\n//     [selectCollections],\r\n//     collections => (collections ? collections[collectionUrlParam] : null)\r\n// );\r\n\r\n// export const selectIsCollectionFetching = createSelector(\r\n//     [selectShop],\r\n//     shop => shop.isFetching\r\n// );\r\n\r\n// export const selectIsCollectionsLoaded = createSelector(\r\n//     [selectShop],\r\n//     shop => !!shop.collections\r\n// );\r\n    \r\n\r\nimport { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);"]},"metadata":{},"sourceType":"module"}