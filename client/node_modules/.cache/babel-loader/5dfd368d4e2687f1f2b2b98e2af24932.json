{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_course\\\\bell-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; // imports needed when using CSS in JS\n\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles'; //=================================================\n// needed when using SCSS styling method\n// + sign-in.styles.scss file\n//=================================================\n// import './sign-in.styles.scss';\n// class SignIn extends React.Component{\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             email: '',\n//             password: ''\n//         };\n//     }\n//     handleSubmit = async event => {\n//         event.preventDefault();\n//         const { email, password } = this.state;\n//         try {\n//             await auth.signInWithEmailAndPassword(email, password);\n//             this.setState({ email: '', password: '' });\n//         } catch(error) {\n//             console.log(error);\n//         }\n//     };\n//     handleChange = event => {\n//         const { value, name } = event.target;\n//         this.setState({ [name]: value});\n//     };\n//     render() {\n//         return(\n//             <div className='sign-in'>\n//                 <h2>I already have an account</h2>\n//                 <span>Sign in with your email and password</span>\n//                 <form onSubmit={this.handleSubmit}>\n//                     <FormInput \n//                     name='email' \n//                     type='email' \n//                     handleChange={this.handleChange} \n//                     value={this.state.email} \n//                     label='email'\n//                     required\n//                     />\n//                     <FormInput \n//                     name='password' \n//                     type='password' \n//                     value={this.state.password}\n//                     handleChange={this.handleChange} \n//                     label='password'\n//                     required\n//                     />\n//                     <div className='buttons'>\n//                     <CustomButton type='submit'> Sign in </CustomButton>\n//                     <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n//                     Sign in with Google\n//                     </CustomButton>\n//                     </div>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n//=================================================\n//=================================================\n// needed using CSS in JS styling method +\n// menu-item.styles.jsx file\n//=================================================\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSingInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/React_course/bell-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","emailSingInStart","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD,C,CAEA;;AACA,SACIC,eADJ,EAEIC,WAFJ,EAGIC,mBAHJ,QAIS,kBAJT,C,CAMA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAuB,KAAKO,KAAlC;AACA,YAAM;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AAEAC,MAAAA,gBAAgB,CAACH,KAAD,EAAQC,QAAR,CAAhB;AACD,KAfkB;;AAAA,SAwBnBG,YAxBmB,GAwBJN,KAAK,IAAI;AACtB,YAAM;AAAEO,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBR,KAAK,CAACS,MAA9B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQD;AAAV,OAAd;AACD,KA5BkB;;AAGjB,SAAKH,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAuBDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAwB,KAAKQ,KAAnC;AACA,wBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,eAIE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,YAAY,EAAE,KAAKO,YAHrB;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWF,KAJpB;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD,QAHpB;AAIE,MAAA,YAAY,EAAE,KAAKG,YAJrB;AAKE,MAAA,KAAK,EAAC,UALR;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAiBE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEhB,iBAArC;AAAwD,MAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAjBF,CAJF,CADF;AA+BD;;AAhEgC;;AAmErC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAE,MAAMuB,QAAQ,CAACvB,iBAAiB,EAAlB,CADK;AAEtCC,EAAAA,gBAAgB,EAAE,CAACW,KAAD,EAAQC,QAAR,KAAqBU,QAAQ,CAACtB,gBAAgB,CAAC;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAFT,CAAL,CAAnC;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCjB,MAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\n// imports needed when using CSS in JS\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer\r\n  } from './sign-in.styles';\r\n\r\n//=================================================\r\n// needed when using SCSS styling method\r\n// + sign-in.styles.scss file\r\n//=================================================\r\n\r\n// import './sign-in.styles.scss';\r\n\r\n// class SignIn extends React.Component{\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             email: '',\r\n//             password: ''\r\n//         };\r\n//     }\r\n\r\n//     handleSubmit = async event => {\r\n//         event.preventDefault();\r\n\r\n//         const { email, password } = this.state;\r\n        \r\n//         try {\r\n//             await auth.signInWithEmailAndPassword(email, password);\r\n\r\n//             this.setState({ email: '', password: '' });\r\n//         } catch(error) {\r\n//             console.log(error);\r\n//         }\r\n//     };\r\n\r\n//     handleChange = event => {\r\n//         const { value, name } = event.target;\r\n\r\n//         this.setState({ [name]: value});\r\n//     };\r\n\r\n//     render() {\r\n//         return(\r\n//             <div className='sign-in'>\r\n//                 <h2>I already have an account</h2>\r\n//                 <span>Sign in with your email and password</span>\r\n\r\n//                 <form onSubmit={this.handleSubmit}>\r\n//                     <FormInput \r\n//                     name='email' \r\n//                     type='email' \r\n//                     handleChange={this.handleChange} \r\n//                     value={this.state.email} \r\n//                     label='email'\r\n//                     required\r\n//                     />\r\n//                     <FormInput \r\n//                     name='password' \r\n//                     type='password' \r\n//                     value={this.state.password}\r\n//                     handleChange={this.handleChange} \r\n//                     label='password'\r\n//                     required\r\n//                     />\r\n//                     <div className='buttons'>\r\n//                     <CustomButton type='submit'> Sign in </CustomButton>\r\n//                     <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n//                     Sign in with Google\r\n//                     </CustomButton>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n//=================================================\r\n\r\n//=================================================\r\n// needed using CSS in JS styling method +\r\n// menu-item.styles.jsx file\r\n//=================================================\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        email: '',\r\n        password: ''\r\n      };\r\n    }\r\n  \r\n    handleSubmit = async event => {\r\n      event.preventDefault();\r\n      const { emailSignInStart } = this.props;\r\n      const { email, password } = this.state;\r\n\r\n      emailSingInStart(email, password);\r\n    };\r\n      // try {\r\n      //   await auth.signInWithEmailAndPassword(email, password);\r\n      //   this.setState({ email: '', password: '' });\r\n      // } catch (error) {\r\n      //   console.log(error);\r\n      // }\r\n    // };\r\n  \r\n    handleChange = event => {\r\n      const { value, name } = event.target;\r\n  \r\n      this.setState({ [name]: value });\r\n    };\r\n  \r\n    render() {\r\n      const { googleSignInStart } = this.props;\r\n      return (\r\n        <SignInContainer>\r\n          <SignInTitle>I already have an account</SignInTitle>\r\n          <span>Sign in with your email and password</span>\r\n  \r\n          <form onSubmit={this.handleSubmit}>\r\n            <FormInput\r\n              name='email'\r\n              type='email'\r\n              handleChange={this.handleChange}\r\n              value={this.state.email}\r\n              label='email'\r\n              required\r\n            />\r\n            <FormInput\r\n              name='password'\r\n              type='password'\r\n              value={this.state.password}\r\n              handleChange={this.handleChange}\r\n              label='password'\r\n              required\r\n            />\r\n            <ButtonsBarContainer>\r\n              <CustomButton type='submit'> Sign in </CustomButton>\r\n              <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                Sign in with Google\r\n              </CustomButton>\r\n            </ButtonsBarContainer>\r\n          </form>\r\n        </SignInContainer>\r\n      );\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}