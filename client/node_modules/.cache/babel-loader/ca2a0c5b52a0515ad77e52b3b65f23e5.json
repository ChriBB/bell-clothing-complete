{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Course\\\\bell-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionsFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionsFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/React_Course/bell-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionsFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsFetching","isCollectionsLoaded","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,2BAAT,EAAsCC,yBAAtC,QAAuE,iCAAvE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,mBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AAEAX,IAAAA,0BAA0B;AAC7B;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,qBAAT;AAAgCC,MAAAA;AAAhC,QAAwD,KAAKJ,KAAnE;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO,oBAAC,KAAD;AACA,MAAA,KAAK,MADL;AACM,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAD1B;AAEA,MAAA,MAAM,EAAEL,KAAK,iBACZ,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,eAOO,oBAAC,KAAD;AACA,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADpB;AAEA,MAAA,MAAM,EAAEL,KAAK,iBACZ,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPP,CADJ;AAgBH;;AA1BkC;;AA2BtC;AAED,MAAMM,eAAe,GAAGnB,wBAAwB,CAAC;AAC7CoB,EAAAA,oBAAoB,EAAEjB,2BADuB;AAE7Cc,EAAAA,mBAAmB,EAAEb;AAFwB,CAAD,CAAhD;;AAKA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,0BAA0B,EAAE,MAAMoB,QAAQ,CAACpB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOkB,eAAP,EAAwBE,kBAAxB,CAAP,CAAmDX,QAAnD,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        \r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionsFetching, isCollectionsLoaded } = this.props;\r\n        \r\n        return (\r\n            <div className='shop-page'>\r\n                   <Route \r\n                   exact path={`${match.path}`} \r\n                   render={props => ( \r\n                    <CollectionOverviewWithSpinner isLoading={isCollectionsFetching} {...props} />\r\n                   )}\r\n                   />\r\n                   <Route \r\n                   path={`${match.path}/:collectionId`} \r\n                   render={props => (\r\n                    <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props}/>\r\n                   )}\r\n                   />\r\n             </div>\r\n         );\r\n    }\r\n}; \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionsFetching,\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(null, mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}