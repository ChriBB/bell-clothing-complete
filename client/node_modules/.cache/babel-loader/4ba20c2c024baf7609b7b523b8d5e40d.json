{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Course\\\\bell-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions'; // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n// import needed when using CSS in JS\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'; //=================================================\n// needed when using SCSS styling method\n// + sign-up.styles.scss file\n//=================================================\n// import './sign-up.styles.scss';\n// class SignUp extends React.Component {\n//     constructor(){\n//         super();\n//         this.state = {\n//             displayName: '',\n//             email: '',\n//             password: '',\n//             confirmPassword: ''\n//         }\n//     }\n//     handleSubmit = async event => {\n//         event.preventDefault();\n//         const {displayName, email, password, confirmPassword} = this.state;\n//         if(password !== confirmPassword) {\n//             alert(\"passwords don't match\");\n//             return;\n//         }\n//         try {\n//             const { user } = await auth.createUserWithEmailAndPassword(email, password);\n//             await createUserProfileDocument(user, {displayName});\n//             this.setState({\n//                 displayName: '',\n//                 email: '',\n//                 password: '',\n//                 confirmPassword: ''\n//             });\n//         } catch (error) {\n//             console.error(error);\n//         }\n//     };\n//     handleChange = event => {\n//         const { name, value } = event.target;\n//         this.setState({[name]: value});\n//     };\n//     render() {\n//         const {displayName, email, password, confirmPassword} = this.state;\n//         return(\n//             <div className='sign-up'>\n//                 <h2 className='title'>I do not have an account</h2>\n//                 <span>Sign up with your email and password</span>\n//                 <form className='sign-up-form' onSubmit={this.handleSubmit}>\n//                     <FormInput\n//                         type='text'\n//                         name='displayName'\n//                         value={displayName}\n//                         onChange={this.handleChange}\n//                         label='Display Name'\n//                         required\n//                     />\n//                     <FormInput\n//                         type='email'\n//                         name='email'\n//                         value={email}\n//                         onChange={this.handleChange}\n//                         label='Email'\n//                         required\n//                     />\n//                     <FormInput\n//                         type='password'\n//                         name='password'\n//                         value={password}\n//                         onChange={this.handleChange}\n//                         label='Password'\n//                         required\n//                     />\n//                     <FormInput\n//                         type='password'\n//                         name='confirmPassword'\n//                         value={confirmPassword}\n//                         onChange={this.handleChange}\n//                         label='Confirm Password'\n//                         required\n//                     />\n//                     <CustomButton type='submit'> SIGN UP </CustomButton>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n//=================================================\n// needed using CSS in JS styling method +\n// sign-up.styles.jsx file\n//=================================================\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/React_Course/bell-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\n// import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\n// import needed when using CSS in JS\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\n\r\n//=================================================\r\n// needed when using SCSS styling method\r\n// + sign-up.styles.scss file\r\n//=================================================\r\n// import './sign-up.styles.scss';\r\n\r\n// class SignUp extends React.Component {\r\n//     constructor(){\r\n//         super();\r\n\r\n//         this.state = {\r\n//             displayName: '',\r\n//             email: '',\r\n//             password: '',\r\n//             confirmPassword: ''\r\n//         }\r\n//     }\r\n\r\n//     handleSubmit = async event => {\r\n//         event.preventDefault();\r\n\r\n//         const {displayName, email, password, confirmPassword} = this.state;\r\n\r\n//         if(password !== confirmPassword) {\r\n//             alert(\"passwords don't match\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n//             await createUserProfileDocument(user, {displayName});\r\n\r\n//             this.setState({\r\n//                 displayName: '',\r\n//                 email: '',\r\n//                 password: '',\r\n//                 confirmPassword: ''\r\n//             });\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//         }\r\n//     };\r\n\r\n//     handleChange = event => {\r\n//         const { name, value } = event.target;\r\n\r\n//         this.setState({[name]: value});\r\n//     };\r\n\r\n//     render() {\r\n//         const {displayName, email, password, confirmPassword} = this.state;\r\n//         return(\r\n//             <div className='sign-up'>\r\n//                 <h2 className='title'>I do not have an account</h2>\r\n//                 <span>Sign up with your email and password</span>\r\n//                 <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n//                     <FormInput\r\n//                         type='text'\r\n//                         name='displayName'\r\n//                         value={displayName}\r\n//                         onChange={this.handleChange}\r\n//                         label='Display Name'\r\n//                         required\r\n//                     />\r\n//                     <FormInput\r\n//                         type='email'\r\n//                         name='email'\r\n//                         value={email}\r\n//                         onChange={this.handleChange}\r\n//                         label='Email'\r\n//                         required\r\n//                     />\r\n//                     <FormInput\r\n//                         type='password'\r\n//                         name='password'\r\n//                         value={password}\r\n//                         onChange={this.handleChange}\r\n//                         label='Password'\r\n//                         required\r\n//                     />\r\n//                     <FormInput\r\n//                         type='password'\r\n//                         name='confirmPassword'\r\n//                         value={confirmPassword}\r\n//                         onChange={this.handleChange}\r\n//                         label='Confirm Password'\r\n//                         required\r\n//                     />\r\n//                     <CustomButton type='submit'> SIGN UP </CustomButton>\r\n//                 </form>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n//=================================================\r\n// needed using CSS in JS styling method +\r\n// sign-up.styles.jsx file\r\n//=================================================\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n  }); \r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n  \r\n  const handleSubmit = async event => {\r\n      event.preventDefault();\r\n        \r\n      if (password !== confirmPassword) {\r\n        alert(\"passwords don't match\");\r\n        return;\r\n      }\r\n  \r\n      \r\n      signUpStart({ displayName, email, password });\r\n    };\r\n  \r\n    const handleChange = event => {\r\n      const { name, value } = event.target;\r\n  \r\n      setUserCredentials({...userCredentials, [name]: value });\r\n    };\r\n  \r\n    return (\r\n        <SignUpContainer>\r\n          <SignUpTitle>I do not have a account</SignUpTitle>\r\n          <span>Sign up with your email and password</span>\r\n          <form className='sign-up-form' onSubmit={handleSubmit}>\r\n            <FormInput\r\n              type='text'\r\n              name='displayName'\r\n              value={displayName}\r\n              onChange={handleChange}\r\n              label='Display Name'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={handleChange}\r\n              label='Email'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={handleChange}\r\n              label='Password'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='password'\r\n              name='confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={handleChange}\r\n              label='Confirm Password'\r\n              required\r\n            />\r\n            <CustomButton type='submit'>SIGN UP</CustomButton>\r\n          </form>\r\n        </SignUpContainer>\r\n      );\r\n    }\r\n  \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n  \r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}